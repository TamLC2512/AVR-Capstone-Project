;#include <mega328p.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000005 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000006 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000007 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000008 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <alcd.h>
;#include <delay.h>
;#include <stdlib.h>
;
;unsigned char counter = 0;
;unsigned char myStr[3];
;
;interrupt [EXT_INT0] void ext_int0_isr(void)
; 0000 000A {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 000B     counter++;    //dem len sau moi lan ngat
;PCODE: $0000000F VOL: 0
; 0000 000C     itoa(counter, myStr);
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 000D     lcd_gotoxy(0,1);
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 000E     lcd_puts("Counter:");
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 000F     lcd_puts(myStr);
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0010 }
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0

	.DSEG
_0x3:
	.BYTE 0x9
;
;void main(void)
; 0000 0013 {

	.CSEG
;PCODE: $00000021 VOL: 0
; 0000 0014     #pragma optsize-
; 0000 0015     CLKPR=(1<<CLKPCE);
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0016     CLKPR=0x00;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0017     #ifdef _OPTIMIZE_SIZE_
; 0000 0018     #pragma optsize+
; 0000 0019     #endif
; 0000 001A 
; 0000 001B     lcd_init(16);
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 001C     lcd_gotoxy(3,0);
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 001D     lcd_puts("INTERRUPT");
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 001E     lcd_gotoxy(0,1);
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 001F     lcd_puts("Counter:");
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0020     itoa(counter, myStr);
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0021     lcd_puts(myStr);
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0022 
; 0000 0023   // su dung chan PD2 de doc nut nhan
; 0000 0024   // cau hinh dien tro keo len chan PD2
; 0000 0025     PORTD |= (1<<PORTD2);   //PORTD.2 = 1;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0026     DDRD  &= ~(1<<DDD2);    //DDRD.2 = 0;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0027 
; 0000 0028   //su dung ngat 0, lay canh xuong
; 0000 0029     EICRA = (1<<ISC01) | (0<<ISC00);
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 002A     EIMSK = (0<<INT1) | (1<<INT0);
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 002B     EIFR  = (0<<INTF1) | (1<<INTF0);
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 002C 
; 0000 002D     #asm("sei")
;PCODE: $00000047 VOL: 0
	sei
;PCODE: $00000048 VOL: 0
; 0000 002E     while (1){}
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 002F }
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0

	.DSEG
_0x4:
	.BYTE 0x13
