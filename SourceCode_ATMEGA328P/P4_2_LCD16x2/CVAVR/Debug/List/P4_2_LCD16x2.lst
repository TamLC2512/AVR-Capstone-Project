
AVRASM ver. 2.1.30  D:\_DO_AN_TOT_NGHIEP\MCU_project\_SourceCode_ATMEGA328P\P4_2_LCD16x2\CVAVR\Debug\List\P4_2_LCD16x2.asm Sat Jan 04 09:02:51 2025

D:\_DO_AN_TOT_NGHIEP\MCU_project\_SourceCode_ATMEGA328P\P4_2_LCD16x2\CVAVR\Debug\List\P4_2_LCD16x2.asm(1090): warning: Register r3 already defined by the .DEF directive
D:\_DO_AN_TOT_NGHIEP\MCU_project\_SourceCode_ATMEGA328P\P4_2_LCD16x2\CVAVR\Debug\List\P4_2_LCD16x2.asm(1091): warning: Register r4 already defined by the .DEF directive
D:\_DO_AN_TOT_NGHIEP\MCU_project\_SourceCode_ATMEGA328P\P4_2_LCD16x2\CVAVR\Debug\List\P4_2_LCD16x2.asm(1092): warning: Register r5 already defined by the .DEF directive
D:\_DO_AN_TOT_NGHIEP\MCU_project\_SourceCode_ATMEGA328P\P4_2_LCD16x2\CVAVR\Debug\List\P4_2_LCD16x2.asm(1093): warning: Register r6 already defined by the .DEF directive
D:\_DO_AN_TOT_NGHIEP\MCU_project\_SourceCode_ATMEGA328P\P4_2_LCD16x2\CVAVR\Debug\List\P4_2_LCD16x2.asm(1094): warning: Register r8 already defined by the .DEF directive
D:\_DO_AN_TOT_NGHIEP\MCU_project\_SourceCode_ATMEGA328P\P4_2_LCD16x2\CVAVR\Debug\List\P4_2_LCD16x2.asm(1095): warning: Register r7 already defined by the .DEF directive
D:\_DO_AN_TOT_NGHIEP\MCU_project\_SourceCode_ATMEGA328P\P4_2_LCD16x2\CVAVR\Debug\List\P4_2_LCD16x2.asm(1096): warning: Register r10 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega328P
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega328P
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x08FF
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _length=R3
                 	.DEF _length_msb=R4
                 	.DEF _lcd_width=R5
                 	.DEF _lcd_width_msb=R6
                 	.DEF __lcd_x=R8
                 	.DEF __lcd_y=R7
                 	.DEF __lcd_maxx=R10
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0066 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000034 002b
000035 0010      	.DB  0x2B,0x0,0x10,0x0
                 
                 _0x3:
000036 2020
000037 2020
000038 2020
000039 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00003a 2020
00003b 2020
00003c 2020
00003d 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00003e 4548
00003f 4c4c
000040 204f
000041 4f57      	.DB  0x48,0x45,0x4C,0x4C,0x4F,0x20,0x57,0x4F
000042 4c52
000043 2044
000044 2020
000045 2020      	.DB  0x52,0x4C,0x44,0x20,0x20,0x20,0x20,0x20
000046 2020
000047 2020
000048 2020
000049 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00004a 2020
D:\_DO_AN_TOT_NGHIEP\MCU_project\_SourceCode_ATMEGA328P\P4_2_LCD16x2\CVAVR\Debug\List\P4_2_LCD16x2.asm(1145): warning: .cseg .db misalignment - padding zero byte
00004b 0020      	.DB  0x20,0x20,0x20
                 _0x0:
00004c 6544
00004d 6f6d
00004e 6f20
00004f 2066      	.DB  0x44,0x65,0x6D,0x6F,0x20,0x6F,0x66,0x20
000050 6874
000051 0065
000052 7832
000053 3631      	.DB  0x74,0x68,0x65,0x0,0x32,0x78,0x31,0x36
000054 4c20
000055 4443
000056 4420
000057 7369      	.DB  0x20,0x4C,0x43,0x44,0x20,0x44,0x69,0x73
000058 6c70
000059 7961
D:\_DO_AN_TOT_NGHIEP\MCU_project\_SourceCode_ATMEGA328P\P4_2_LCD16x2\CVAVR\Debug\List\P4_2_LCD16x2.asm(1150): warning: .cseg .db misalignment - padding zero byte
00005a 0000      	.DB  0x70,0x6C,0x61,0x79,0x0
                 _0x2000003:
00005b c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
00005c 0004      	.DW  0x04
00005d 0003      	.DW  0x03
00005e 0068      	.DW  __REG_VARS*2
                 
00005f 002b      	.DW  0x2B
000060 0300      	.DW  _myStr
000061 006c      	.DW  _0x3*2
                 
000062 0002      	.DW  0x02
000063 032c      	.DW  __base_y_G100
000064 00b6      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
000065 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000066 94f8      	CLI
000067 27ee      	CLR  R30
000068 bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000069 e0f1      	LDI  R31,1
00006a bff5      	OUT  MCUCR,R31
00006b bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00006c e08d      	LDI  R24,(14-2)+1
00006d e0a2      	LDI  R26,2
00006e 27bb      	CLR  R27
                 __CLEAR_REG:
00006f 93ed      	ST   X+,R30
000070 958a      	DEC  R24
000071 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000072 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000073 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000074 e0a0      	LDI  R26,LOW(__SRAM_START)
000075 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000076 93ed      	ST   X+,R30
000077 9701      	SBIW R24,1
000078 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000079 ebe8      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00007a e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00007b 9185      	LPM  R24,Z+
00007c 9195      	LPM  R25,Z+
00007d 9700      	SBIW R24,0
00007e f061      	BREQ __GLOBAL_INI_END
00007f 91a5      	LPM  R26,Z+
000080 91b5      	LPM  R27,Z+
000081 9005      	LPM  R0,Z+
000082 9015      	LPM  R1,Z+
000083 01bf      	MOVW R22,R30
000084 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000085 9005      	LPM  R0,Z+
000086 920d      	ST   X+,R0
000087 9701      	SBIW R24,1
000088 f7e1      	BRNE __GLOBAL_INI_LOOP
000089 01fb      	MOVW R30,R22
00008a cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;GPIOR0 INITIALIZATION
00008b e0e0      	LDI  R30,__GPIOR0_INIT
00008c bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00008d efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00008e bfed      	OUT  SPL,R30
00008f e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000090 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000091 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000092 e0d3      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000093 940c 0095 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x300
                 
                 	.CSEG
                 ;#include <mega328p.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;#include <alcd.h>
                 ;#include <delay.h>
                 ;
                 ;//mang chua doan ky tu can hien thi
                 ;//myStr gom (16+11+16) ky tu
                 ;char myStr[] = "                HELLO WORLD                ";
                 
                 	.DSEG
                 ;int length = sizeof(myStr) - 1; //tru 1 ky tu ket thuc
                 ;int lcd_width = 16;
                 ;
                 ;void main(void)
                 ; 0000 000C {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 000D #pragma optsize-
                 ; 0000 000E CLKPR=(1<<CLKPCE);
000095 e8e0      	LDI  R30,LOW(128)
000096 93e0 0061 	STS  97,R30
                 ; 0000 000F CLKPR=0x00;
000098 e0e0      	LDI  R30,LOW(0)
000099 93e0 0061 	STS  97,R30
                 ; 0000 0010 #ifdef _OPTIMIZE_SIZE_
                 ; 0000 0011 #pragma optsize+
                 ; 0000 0012 #endif
                 ; 0000 0013 
                 ; 0000 0014   lcd_init(16);
00009b e1a0      	LDI  R26,LOW(16)
00009c d0b7      	RCALL _lcd_init
                 ; 0000 0015   lcd_gotoxy(2,0);
00009d e0e2      	LDI  R30,LOW(2)
00009e 93ea      	ST   -Y,R30
00009f e0a0      	LDI  R26,LOW(0)
0000a0 d074      	RCALL _lcd_gotoxy
                 ; 0000 0016   lcd_putsf("Demo of the");
                +
0000a1 e9a8     +LDI R26 , LOW ( 2 * _0x0 + ( 0 ) )
0000a2 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW2FN _0x0,0
0000a3 d09d      	RCALL _lcd_putsf
                 ; 0000 0017   lcd_gotoxy(0,1);
0000a4 e0e0      	LDI  R30,LOW(0)
0000a5 93ea      	ST   -Y,R30
0000a6 e0a1      	LDI  R26,LOW(1)
0000a7 d06d      	RCALL _lcd_gotoxy
                 ; 0000 0018   lcd_putsf("2x16 LCD Display");
                +
0000a8 eaa4     +LDI R26 , LOW ( 2 * _0x0 + ( 12 ) )
0000a9 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 12 ) )
                 	__POINTW2FN _0x0,12
0000aa d096      	RCALL _lcd_putsf
                 ; 0000 0019   delay_ms(2000);
0000ab eda0      	LDI  R26,LOW(2000)
0000ac e0b7      	LDI  R27,HIGH(2000)
0000ad 940e 018c 	CALL _delay_ms
                 ; 0000 001A   lcd_clear();
0000af d072      	RCALL _lcd_clear
                 ; 0000 001B   while (1)
                 _0x4:
                 ; 0000 001C   {
                 ; 0000 001D     int i, j;
                 ; 0000 001E     for (i = length - lcd_width; i >= 0; i--){
0000b0 9724      	SBIW R28,4
                 ;	i -> Y+2
                 ;	j -> Y+0
                +
0000b1 2de3     +MOV R30 , R3
0000b2 2df4     +MOV R31 , R4
                 	__GETW1R 3,4
0000b3 19e5      	SUB  R30,R5
0000b4 09f6      	SBC  R31,R6
0000b5 83ea      	STD  Y+2,R30
0000b6 83fb      	STD  Y+2+1,R31
                 _0x8:
0000b7 81ab      	LDD  R26,Y+3
0000b8 23aa      	TST  R26
0000b9 f13a      	BRMI _0x9
                 ; 0000 001F         lcd_clear();
0000ba d067      	RCALL _lcd_clear
                 ; 0000 0020         for (j = 0; j < lcd_width; j++) {
0000bb e0e0      	LDI  R30,LOW(0)
0000bc 83e8      	STD  Y+0,R30
0000bd 83e9      	STD  Y+0+1,R30
                 _0xB:
0000be 81a8      	LD   R26,Y
0000bf 81b9      	LDD  R27,Y+1
0000c0 15a5      	CP   R26,R5
0000c1 05b6      	CPC  R27,R6
0000c2 f4a4      	BRGE _0xC
                 ; 0000 0021             lcd_gotoxy(j,0);
0000c3 81e8      	LD   R30,Y
0000c4 93ea      	ST   -Y,R30
0000c5 e0a0      	LDI  R26,LOW(0)
0000c6 d04e      	RCALL _lcd_gotoxy
                 ; 0000 0022             lcd_putchar(myStr[i + j]);
0000c7 81e8      	LD   R30,Y
0000c8 81f9      	LDD  R31,Y+1
0000c9 81aa      	LDD  R26,Y+2
0000ca 81bb      	LDD  R27,Y+2+1
0000cb 0fea      	ADD  R30,R26
0000cc 1ffb      	ADC  R31,R27
0000cd 50e0      	SUBI R30,LOW(-_myStr)
0000ce 4ffd      	SBCI R31,HIGH(-_myStr)
0000cf 81a0      	LD   R26,Z
0000d0 d05b      	RCALL _lcd_putchar
                 ; 0000 0023         }
0000d1 81e8      	LD   R30,Y
0000d2 81f9      	LDD  R31,Y+1
0000d3 9631      	ADIW R30,1
0000d4 83e8      	ST   Y,R30
0000d5 83f9      	STD  Y+1,R31
0000d6 cfe7      	RJMP _0xB
                 _0xC:
                 ; 0000 0024         delay_ms(500);
0000d7 efa4      	LDI  R26,LOW(500)
0000d8 e0b1      	LDI  R27,HIGH(500)
0000d9 940e 018c 	CALL _delay_ms
                 ; 0000 0025     }
0000db 81ea      	LDD  R30,Y+2
0000dc 81fb      	LDD  R31,Y+2+1
0000dd 9731      	SBIW R30,1
0000de 83ea      	STD  Y+2,R30
0000df 83fb      	STD  Y+2+1,R31
0000e0 cfd6      	RJMP _0x8
                 _0x9:
                 ; 0000 0026   }
0000e1 9624      	ADIW R28,4
0000e2 cfcd      	RJMP _0x4
                 ; 0000 0027 }
                 _0xD:
0000e3 cfff      	RJMP _0xD
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
0000e4 93aa      	ST   -Y,R26
0000e5 81e8      	LD   R30,Y
0000e6 71e0      	ANDI R30,LOW(0x10)
0000e7 f011      	BREQ _0x2000004
0000e8 9a2b      	SBI  0x5,3
0000e9 c001      	RJMP _0x2000005
                 _0x2000004:
0000ea 982b      	CBI  0x5,3
                 _0x2000005:
0000eb 81e8      	LD   R30,Y
0000ec 72e0      	ANDI R30,LOW(0x20)
0000ed f011      	BREQ _0x2000006
0000ee 9a2a      	SBI  0x5,2
0000ef c001      	RJMP _0x2000007
                 _0x2000006:
0000f0 982a      	CBI  0x5,2
                 _0x2000007:
0000f1 81e8      	LD   R30,Y
0000f2 74e0      	ANDI R30,LOW(0x40)
0000f3 f011      	BREQ _0x2000008
0000f4 9a29      	SBI  0x5,1
0000f5 c001      	RJMP _0x2000009
                 _0x2000008:
0000f6 9829      	CBI  0x5,1
                 _0x2000009:
0000f7 81e8      	LD   R30,Y
0000f8 78e0      	ANDI R30,LOW(0x80)
0000f9 f011      	BREQ _0x200000A
0000fa 9a28      	SBI  0x5,0
0000fb c001      	RJMP _0x200000B
                 _0x200000A:
0000fc 9828      	CBI  0x5,0
                 _0x200000B:
                +
0000fd e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0000fe 958a     +DEC R24
0000ff f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000100 9a2c      	SBI  0x5,4
                +
000101 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000102 958a     +DEC R24
000103 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000104 982c      	CBI  0x5,4
                +
000105 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000106 958a     +DEC R24
000107 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000108 c075      	RJMP _0x2020001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
000109 93aa      	ST   -Y,R26
00010a 81a8      	LD   R26,Y
00010b dfd8      	RCALL __lcd_write_nibble_G100
00010c 81e8          ld    r30,y
00010d 95e2          swap  r30
00010e 83e8          st    y,r30
00010f 81a8      	LD   R26,Y
000110 dfd3      	RCALL __lcd_write_nibble_G100
                +
000111 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
000112 958a     +DEC R24
000113 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
000114 c069      	RJMP _0x2020001
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
000115 93aa      	ST   -Y,R26
000116 81e8      	LD   R30,Y
000117 e0f0      	LDI  R31,0
000118 5de4      	SUBI R30,LOW(-__base_y_G100)
000119 4ffc      	SBCI R31,HIGH(-__base_y_G100)
00011a 81e0      	LD   R30,Z
00011b 81a9      	LDD  R26,Y+1
00011c 0fae      	ADD  R26,R30
00011d dfeb      	RCALL __lcd_write_data
00011e 8089      	LDD  R8,Y+1
00011f 8078      	LDD  R7,Y+0
000120 9622      	ADIW R28,2
000121 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
000122 e0a2      	LDI  R26,LOW(2)
000123 d05c      	RCALL SUBOPT_0x0
000124 e0ac      	LDI  R26,LOW(12)
000125 dfe3      	RCALL __lcd_write_data
000126 e0a1      	LDI  R26,LOW(1)
000127 d058      	RCALL SUBOPT_0x0
000128 e0e0      	LDI  R30,LOW(0)
000129 2e7e      	MOV  R7,R30
00012a 2e8e      	MOV  R8,R30
00012b 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
00012c 93aa      	ST   -Y,R26
00012d 81a8      	LD   R26,Y
00012e 30aa      	CPI  R26,LOW(0xA)
00012f f011      	BREQ _0x2000011
000130 148a      	CP   R8,R10
000131 f048      	BRLO _0x2000010
                 _0x2000011:
000132 e0e0      	LDI  R30,LOW(0)
000133 93ea      	ST   -Y,R30
000134 9473      	INC  R7
000135 2da7      	MOV  R26,R7
000136 dfde      	RCALL _lcd_gotoxy
000137 81a8      	LD   R26,Y
000138 30aa      	CPI  R26,LOW(0xA)
000139 f409      	BRNE _0x2000013
00013a c043      	RJMP _0x2020001
                 _0x2000013:
                 _0x2000010:
00013b 9483      	INC  R8
00013c 9a2e      	SBI  0x5,6
00013d 81a8      	LD   R26,Y
00013e dfca      	RCALL __lcd_write_data
00013f 982e      	CBI  0x5,6
000140 c03d      	RJMP _0x2020001
                 ; .FEND
                 _lcd_putsf:
                 ; .FSTART _lcd_putsf
000141 93ba      	ST   -Y,R27
000142 93aa      	ST   -Y,R26
000143 931a      	ST   -Y,R17
                 _0x2000017:
000144 81e9      	LDD  R30,Y+1
000145 81fa      	LDD  R31,Y+1+1
000146 9631      	ADIW R30,1
000147 83e9      	STD  Y+1,R30
000148 83fa      	STD  Y+1+1,R31
000149 9731      	SBIW R30,1
00014a 91e4      	LPM  R30,Z
00014b 2f1e      	MOV  R17,R30
00014c 30e0      	CPI  R30,0
00014d f019      	BREQ _0x2000019
00014e 2fa1      	MOV  R26,R17
00014f dfdc      	RCALL _lcd_putchar
000150 cff3      	RJMP _0x2000017
                 _0x2000019:
000151 8118      	LDD  R17,Y+0
000152 9623      	ADIW R28,3
000153 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000154 93aa      	ST   -Y,R26
000155 9a23      	SBI  0x4,3
000156 9a22      	SBI  0x4,2
000157 9a21      	SBI  0x4,1
000158 9a20      	SBI  0x4,0
000159 9a24      	SBI  0x4,4
00015a 9a26      	SBI  0x4,6
00015b 9a25      	SBI  0x4,5
00015c 982c      	CBI  0x5,4
00015d 982e      	CBI  0x5,6
00015e 982d      	CBI  0x5,5
00015f 80a8      	LDD  R10,Y+0
000160 81e8      	LD   R30,Y
000161 58e0      	SUBI R30,-LOW(128)
                +
000162 93e0 032e+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
000164 81e8      	LD   R30,Y
000165 54e0      	SUBI R30,-LOW(192)
                +
000166 93e0 032f+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000168 e1a4      	LDI  R26,LOW(20)
000169 e0b0      	LDI  R27,0
00016a 940e 018c 	CALL _delay_ms
00016c d018      	RCALL SUBOPT_0x1
00016d d017      	RCALL SUBOPT_0x1
00016e d016      	RCALL SUBOPT_0x1
00016f e2a0      	LDI  R26,LOW(32)
000170 df73      	RCALL __lcd_write_nibble_G100
                +
000171 ec88     +LDI R24 , LOW ( 200 )
000172 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000173 9701     +SBIW R24 , 1
000174 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000175 e2a8      	LDI  R26,LOW(40)
000176 df92      	RCALL __lcd_write_data
000177 e0a4      	LDI  R26,LOW(4)
000178 df90      	RCALL __lcd_write_data
000179 e8a5      	LDI  R26,LOW(133)
00017a df8e      	RCALL __lcd_write_data
00017b e0a6      	LDI  R26,LOW(6)
00017c df8c      	RCALL __lcd_write_data
00017d dfa4      	RCALL _lcd_clear
                 _0x2020001:
00017e 9621      	ADIW R28,1
00017f 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _myStr:
000300           	.BYTE 0x2C
                 __base_y_G100:
00032c           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
000180 df88      	RCALL __lcd_write_data
000181 e0a3      	LDI  R26,LOW(3)
000182 e0b0      	LDI  R27,0
000183 940c 018c 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1:
000185 e3a0      	LDI  R26,LOW(48)
000186 df5d      	RCALL __lcd_write_nibble_G100
                +
000187 ec88     +LDI R24 , LOW ( 200 )
000188 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000189 9701     +SBIW R24 , 1
00018a f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00018b 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
00018c 9610      	adiw r26,0
00018d f039      	breq __delay_ms1
                 __delay_ms0:
                +
00018e ed80     +LDI R24 , LOW ( 0x7D0 )
00018f e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000190 9701     +SBIW R24 , 1
000191 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000192 95a8      	wdr
000193 9711      	sbiw r26,1
000194 f7c9      	brne __delay_ms0
                 __delay_ms1:
000195 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega328P register use summary:
r0 :   4 r1 :   1 r2 :   0 r3 :   1 r4 :   1 r5 :   2 r6 :   2 r7 :   4 
r8 :   4 r9 :   0 r10:   2 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   0 r17:   4 r18:   0 r19:   0 r20:   0 r21:   0 r22:   2 r23:   0 
r24:  21 r25:   5 r26:  48 r27:  14 r28:   6 r29:   1 r30:  73 r31:  17 
x  :   3 y  :  55 z  :  10 
Registers used: 22 out of 35 (62.9%)

ATmega328P instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   2 
adiw  :   7 and   :   0 andi  :   4 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :   8 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   1 
brlt  :   0 brmi  :   1 brne  :  12 brpl  :   0 brsh  :   0 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   3 
cbi   :   9 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   2 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   2 cpc   :   1 cpi   :   3 cpse  :   0 dec   :   5 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   0 inc   :   2 jmp   :  28 ld    :  19 ldd   :  15 ldi   :  57 
lds   :   0 lpm   :   9 lsl   :   0 lsr   :   0 mov   :   7 movw  :   3 
mul   :   0 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 or    :   0 
ori   :   0 out   :   6 pop   :   0 push  :   0 rcall :  29 ret   :   6 
reti  :   0 rjmp  :  14 rol   :   0 ror   :   0 sbc   :   1 sbci  :   2 
sbi   :  13 sbic  :   0 sbis  :   0 sbiw  :  10 sbr   :   0 sbrc  :   0 
sbrs  :   0 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  17 std   :   9 sts   :   4 sub   :   1 subi  :   4 swap  :   1 
tst   :   1 wdr   :   1 
Instructions used: 41 out of 116 (35.3%)

ATmega328P memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00032c    712    100    812   32768   2.5%
[.dseg] 0x000100 0x000330      0     48     48    2048   2.3%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 9 warnings
