;#include <mega328p.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000005 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000006 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000007 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000008 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <alcd.h>
;#include <delay.h>
;
;//mang chua doan ky tu can hien thi
;//myStr gom (16+11+16) ky tu
;char myStr[] = "                HELLO WORLD                ";

	.DSEG
;int length = sizeof(myStr) - 1; //tru 1 ky tu ket thuc
;int lcd_width = 16;
;
;void main(void)
; 0000 000C {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 000D #pragma optsize-
; 0000 000E CLKPR=(1<<CLKPCE);
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 000F CLKPR=0x00;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0010 #ifdef _OPTIMIZE_SIZE_
; 0000 0011 #pragma optsize+
; 0000 0012 #endif
; 0000 0013 
; 0000 0014   lcd_init(16);
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0015   lcd_gotoxy(2,0);
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0016   lcd_putsf("Demo of the");
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 0017   lcd_gotoxy(0,1);
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0018   lcd_putsf("2x16 LCD Display");
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0019   delay_ms(2000);
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 001A   lcd_clear();
;PCODE: $00000024 VOL: 0
; 0000 001B   while (1)
;PCODE: $00000025 VOL: 0
; 0000 001C   {
; 0000 001D     int i, j;
; 0000 001E     for (i = length - lcd_width; i >= 0; i--){
;PCODE: $00000026 VOL: 0
;	i -> Y+2
;	j -> Y+0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 001F         lcd_clear();
;PCODE: $00000032 VOL: 0
; 0000 0020         for (j = 0; j < lcd_width; j++) {
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0021             lcd_gotoxy(j,0);
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0022             lcd_putchar(myStr[i + j]);
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0023         }
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0024         delay_ms(500);
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0025     }
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0026   }
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0027 }
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
